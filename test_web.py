import unittest
import web
from atlassian_jwt.encode import encode_token
import requests_mock
from mock import patch

issue_test1_response = """
{"expand":"renderedFields,names,schema,operations,editmeta,changelog,versionedRepresentations","id":"10200","self":"https://gavindev.atlassian.net/rest/api/latest/issue/10200","key":"TES-3","fields":{"issuetype":{"self":"https://gavindev.atlassian.net/rest/api/2/issuetype/10200","id":"10200","description":"For general IT problems and questions. Created by JIRA Service Desk.","iconUrl":"https://gavindev.atlassian.net/servicedesk/issue-type-icons?icon=it-help","name":"IT Help","subtask":false},"timespent":null,"project":{"self":"https://gavindev.atlassian.net/rest/api/2/project/10100","id":"10100","key":"TES","name":"TestDesk","avatarUrls":{"48x48":"https://gavindev.atlassian.net/secure/projectavatar?avatarId=10324","24x24":"https://gavindev.atlassian.net/secure/projectavatar?size=small&avatarId=10324","16x16":"https://gavindev.atlassian.net/secure/projectavatar?size=xsmall&avatarId=10324","32x32":"https://gavindev.atlassian.net/secure/projectavatar?size=medium&avatarId=10324"}},"fixVersions":[],"aggregatetimespent":null,"resolution":null,"customfield_10302":null,"customfield_10303":null,"resolutiondate":null,"workratio":-1,"watches":{"self":"https://gavindev.atlassian.net/rest/api/2/issue/TES-3/watchers","watchCount":1,"isWatching":false},"lastViewed":null,"created":"2017-06-02T17:03:05.537-0700","customfield_10020":null,"customfield_10021":null,"priority":{"self":"https://gavindev.atlassian.net/rest/api/2/priority/3","iconUrl":"https://gavindev.atlassian.net/images/icons/priorities/medium.svg","name":"Medium","id":"3"},"customfield_10300":[],"labels":[],"customfield_10026":null,"customfield_10301":"{}","customfield_10016":[],"customfield_10017":null,"customfield_10018":null,"customfield_10019":"0|i0005j:","aggregatetimeoriginalestimate":null,"timeestimate":null,"versions":[],"issuelinks":[],"assignee":null,"updated":"2017-06-02T17:03:05.537-0700","status":{"self":"https://gavindev.atlassian.net/rest/api/2/status/10101","description":"This was auto-generated by JIRA Service Desk during workflow import","iconUrl":"https://gavindev.atlassian.net/images/icons/status_generic.gif","name":"Waiting for support","id":"10101","statusCategory":{"self":"https://gavindev.atlassian.net/rest/api/2/statuscategory/1","id":1,"key":"undefined","colorName":"medium-gray","name":"No Category"}},"components":[],"timeoriginalestimate":null,"description":null,"customfield_10010":null,"customfield_10011":null,"customfield_10012":null,"customfield_10013":null,"timetracking":{},"customfield_10015":null,"customfield_10401":null,"customfield_10005":null,"customfield_10006":null,"customfield_10402":null,"customfield_10403":null,"customfield_10007":null,"customfield_10404":null,"customfield_10008":null,"customfield_10405":null,"customfield_10009":null,"attachment":[],"aggregatetimeestimate":null,"summary":"ASD(!*#EIQWDSA","creator":{"self":"https://gavindev.atlassian.net/rest/api/2/user?username=admin","name":"admin","key":"admin","accountId":"557058:ae6eb1e1-51c7-49f4-ac84-0ee1057b5458","emailAddress":"gavin@saucelabs.com","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"displayName":"admin","active":true,"timeZone":"America/Los_Angeles"},"subtasks":[],"reporter":{"self":"https://gavindev.atlassian.net/rest/api/2/user?username=admin","name":"admin","key":"admin","accountId":"557058:ae6eb1e1-51c7-49f4-ac84-0ee1057b5458","emailAddress":"test@testperson.com","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/562f8eec7841ccd25bc614dbba801b8f?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F562f8eec7841ccd25bc614dbba801b8f%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"displayName":"admin","active":true,"timeZone":"America/Los_Angeles"},"aggregateprogress":{"progress":0,"total":0},"customfield_10000":null,"customfield_10001":null,"customfield_10200":null,"customfield_10201":{"id":"1","name":"Time to resolution","_links":{"self":"https://gavindev.atlassian.net/rest/servicedeskapi/request/10200/sla/1"},"completedCycles":[],"ongoingCycle":{"startTime":{"iso8601":"2017-06-02T17:03:05-0700","jira":"2017-06-02T17:03:05.571-0700","friendly":"Friday 5:03 PM","epochMillis":1496448185571},"breachTime":{"iso8601":"2017-06-05T13:00:00-0700","jira":"2017-06-05T13:00:00.000-0700","friendly":"05/Jun/17 1:00 PM","epochMillis":1496692800000},"breached":false,"paused":false,"withinCalendarHours":false,"goalDuration":{"millis":14400000,"friendly":"4h"},"elapsedTime":{"millis":0,"friendly":"0m"},"remainingTime":{"millis":14400000,"friendly":"4h"}}},"customfield_10400":null,"customfield_10004":null,"environment":null,"duedate":null,"progress":{"progress":0,"total":0},"comment":{"comments":[],"maxResults":0,"total":0,"startAt":0},"votes":{"self":"https://gavindev.atlassian.net/rest/api/2/issue/TES-3/votes","votes":0,"hasVoted":false},"worklog":{"startAt":0,"maxResults":20,"total":0,"worklogs":[]}}}
""" # NOQA


class WebTestCase(unittest.TestCase):

    def setUp(self):
        self.app = web.app.test_client()
        web.app.clients = {}

    def tearDown(self):
        pass

    @patch('web.bamboo')
    def test_web_panel(self, bamboo):
        employee = {
            "id": "123",
            "displayName": "Test Person",
            "firstName": "Test",
            "lastName": "Person",
            "jobTitle": "Testing Coordinator",
            "workPhone": "555-555-5555",
            "workPhoneExtension": "",
            "mobilePhone": "555-555-5555",
            "workEmail": "test@testperson.com",
            "department": "Useless Department",
            "location": "Testville, US",
            "division":  None,
            "photoUploaded":  False,
            "photoUrl": "https://iws.bamboohr.com/images/photo_placeholder.gif"
        }
        with requests_mock.mock() as m, patch.object(bamboo, 'get_employee_directory', return_value=[employee]), patch.object(bamboo, 'get_employee', return_value=employee): # NOQA: E128
            client = dict(
                baseUrl='https://gavindev.atlassian.net',
                clientKey='abc123',
                publicKey='public123',
                sharedSecret='myscret')
            web.app.clients[client['clientKey']] = client

            m.get('https://gavindev.atlassian.net'
                  '/rest/api/latest/issue/TEST-1',
                  text=issue_test1_response)

            auth = encode_token(
                'GET',
                '/webpanel/userPanel?issueKey=TEST-1',
                client['clientKey'],
                client['sharedSecret'])

            rv = self.app.get('/webpanel/userPanel?issueKey=TEST-1',
                              headers={'authorization': 'JWT ' + auth})
            self.assertEquals(200, rv.status_code)
            self.assertIn('<td>Test Person</td>', rv.data)
            self.assertIn('<th>Display Name</th>', rv.data)

    def test_configurePage(self):
        client = dict(
            baseUrl='https://gavindev.atlassian.net',
            clientKey='abc123',
            publicKey='public123',
            sharedSecret='myscret')
        web.app.clients[client['clientKey']] = client

        auth = encode_token(
            'GET',
            '/module/configurePage',
            client['clientKey'],
            client['sharedSecret'])

        rv = self.app.get('/module/configurePage',
                          headers={'authorization': 'JWT ' + auth})
        self.assertEquals(200, rv.status_code)
        self.assertIn('<td>Test Person</td>', rv.data)
        self.assertIn('<th>Display Name</th>', rv.data)


if __name__ == '__main__':
    unittest.main()
